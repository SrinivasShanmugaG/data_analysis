CREATE TABLE `date_info` (
  `DATE_ID` int NOT NULL,
  `INSPECTION_DATE` text,
  PRIMARY KEY (`DATE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `development_details` (
  `INSPECTION_DEVELOPMENT_ID` int NOT NULL,
  `INSPECTED_DEVELOPMENT_NAME` varchar(150) DEFAULT NULL,
  `INSPECTED_DEVELOPMENT_ADDRESS` varchar(50) DEFAULT NULL,
  `INSPECTED_DEVELOPMENT_CITY` varchar(30) DEFAULT NULL,
  `INSPECTED_DEVELOPMENT_STATE` varchar(2) DEFAULT NULL,
  PRIMARY KEY (`INSPECTION_DEVELOPMENT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `inspection_details` (
  `INSPECTION_ID` int NOT NULL,
  `PHA_ID` int DEFAULT NULL,
  `INSPECTION_DEVELOPMENT_ID` int DEFAULT NULL,
  `DATE_ID` int DEFAULT NULL,
  `COST_OF_INSPECTION_IN_DOLLARS` int DEFAULT NULL,
  `INSPECTION_SCORE` int DEFAULT NULL,
  PRIMARY KEY (`INSPECTION_ID`),
  KEY `PHA_ID_idx` (`PHA_ID`),
  KEY `INSPECTION_DEVELOPMENT_ID_idx` (`INSPECTION_DEVELOPMENT_ID`),
  KEY `DATE_ID_idx` (`DATE_ID`),
  CONSTRAINT `DATE_ID` FOREIGN KEY (`DATE_ID`) REFERENCES `date_info` (`DATE_ID`),
  CONSTRAINT `INSPECTION_DEVELOPMENT_ID` FOREIGN KEY (`INSPECTION_DEVELOPMENT_ID`) REFERENCES `development_details` (`INSPECTION_DEVELOPMENT_ID`),
  CONSTRAINT `PHA_ID` FOREIGN KEY (`PHA_ID`) REFERENCES `pha_details` (`PHA_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `pha_details` (
  `PHA_ID` int NOT NULL,
  `PUBLIC_HOUSING_AGENCY_NAME` varchar(150) DEFAULT NULL,
  PRIMARY KEY (`PHA_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

ALTER TABLE pha_insights.pha_details Modify column PUBLIC_HOUSING_AGENCY_NAME varchar(150);
ALTER TABLE pha_insights.development_details 
Modify column INSPECTED_DEVELOPMENT_NAME varchar(150),
Modify column INSPECTED_DEVELOPMENT_ADDRESS varchar(50),
Modify column INSPECTED_DEVELOPMENT_CITY varchar(30),
Modify column INSPECTED_DEVELOPMENT_STATE varchar(2);

SELECT * FROM pha_insights.date_info;

show global variables like 'local_infile';

set global local_infile=true;

SHOW VARIABLES LIKE "secure_file_priv";

LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/DATE_INFO.csv'  INTO TABLE pha_insights.date_info FIELDS TERMINATED BY ',' ENCLOSED BY "'" LINES TERMINATED BY '\n'
 IGNORE 1 LINES (DATE_ID, @var1) set INSPECTION_DATE = CASE WHEN STR_TO_DATE(@var1,'%d-%m-%Y') THEN STR_TO_DATE(@var1, '%d-%m-%Y') ELSE STR_TO_DATE(@var1, '%m/%d/%Y')
 END;
 
 UPDATE pha_insights.date_info 
SET 
    INSPECTION_DATE = CASE
        WHEN STR_TO_DATE(INSPECTION_DATE,'%d-%m-%Y') LIKE '_-_-_%'THEN STR_TO_DATE(INSPECTION_DATE, '%d-%m-%Y')
        WHEN STR_TO_DATE(INSPECTION_DATE, '%m/%d/%Y') LIKE  '_/_/_%' THEN STR_TO_DATE(INSPECTION_DATE, '%m/%d/%Y')
    END;

SELECT 
    CASE
        WHEN DATE_FORMAT(INSPECTION_DATE, '%d-%m-%Y') THEN DATE_FORMAT(INSPECTION_DATE, '%d-%m-%Y')
        WHEN DATE_FORMAT(INSPECTION_DATE, '%m/%d/%Y')  THEN DATE_FORMAT(INSPECTION_DATE, '%m/%d/%Y')
    END AS `Date_time`
FROM
    pha_insights.date_info;


 SELECT CASE WHEN STR_TO_DATE(INSPECTION_DATE,'%d-%m-%Y') THEN STR_TO_DATE(INSPECTION_DATE, '%d-%m-%Y') ELSE STR_TO_DATE(INSPECTION_DATE, '%m/%d/%Y') END as DATE_TIME FROM pha_insights.date_info;
 
 -- Question 5 --
SELECT DISTINCT PHA_NAME, MR_INSPECTION_DATE, MR_INSPECTION_COST, 
CASE WHEN LENGTH(DATE(STR_TO_DATE(SECOND_MR_INSPECTION_DATE,'%d-%m-%Y'))) IS NOT NULL THEN STR_TO_DATE(SECOND_MR_INSPECTION_DATE, '%d-%m-%Y') WHEN LENGTH(DATE(STR_TO_DATE(SECOND_MR_INSPECTION_DATE, '%m/%d/%Y'))) IS NOT NULL THEN STR_TO_DATE(SECOND_MR_INSPECTION_DATE, '%m/%d/%Y') END AS SECOND_MR_INSPECTION_DATE, SECOND_MR_INSPECTION_COST,
(SECOND_MR_INSPECTION_COST - MR_INSPECTION_COST) AS CHANGE_IN_COST,
((SECOND_MR_INSPECTION_COST - MR_INSPECTION_COST)/MR_INSPECTION_COST)*100 AS PERCENT_CHANGE_IN_COST
FROM (SELECT pha.PUBLIC_HOUSING_AGENCY_NAME as PHA_NAME, 
CASE WHEN LENGTH(DATE(STR_TO_DATE(INSPECTION_DATE,'%d-%m-%Y'))) IS NOT NULL THEN STR_TO_DATE(INSPECTION_DATE, '%d-%m-%Y') WHEN LENGTH(DATE(STR_TO_DATE(INSPECTION_DATE, '%m/%d/%Y'))) IS NOT NULL THEN STR_TO_DATE(INSPECTION_DATE, '%m/%d/%Y') END
as MR_INSPECTION_DATE, insp.COST_OF_INSPECTION_IN_DOLLARS AS MR_INSPECTION_COST, 
LAG(INSPECTION_DATE) OVER (PARTITION BY PUBLIC_HOUSING_AGENCY_NAME ORDER BY INSPECTION_DATE DESC) AS SECOND_MR_INSPECTION_DATE, 
LAG(COST_OF_INSPECTION_IN_DOLLARS) OVER (PARTITION BY PUBLIC_HOUSING_AGENCY_NAME ORDER BY INSPECTION_DATE DESC) AS SECOND_MR_INSPECTION_COST
FROM pha_insights.inspection_details as insp 
INNER JOIN pha_insights.pha_details as pha on insp.PHA_ID = pha.PHA_ID
INNER JOIN pha_insights.development_details as dev on insp.INSPECTION_DEVELOPMENT_ID = dev.INSPECTION_DEVELOPMENT_ID
INNER JOIN pha_insights.date_info as dt on insp.DATE_ID = dt.DATE_ID WHERE pha.PUBLIC_HOUSING_AGENCY_NAME IN (
        SELECT PUBLIC_HOUSING_AGENCY_NAME
        FROM pha_insights.pha_details 
        GROUP BY PUBLIC_HOUSING_AGENCY_NAME
        HAVING COUNT(*) > 1
        )) as test_data
WHERE SECOND_MR_INSPECTION_COST > MR_INSPECTION_COST;
